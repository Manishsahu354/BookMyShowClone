// Generated by view binder compiler. Do not edit!
package com.chaithanya.bookmyshow.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.chaithanya.bookmyshow.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemLayoutStreamHandpickedBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardStreamItem;

  @NonNull
  public final ConstraintLayout constraintStreamHandpicked;

  @NonNull
  public final ImageView imageHomeStreamItem;

  @NonNull
  public final TextView tvStreamCategory;

  @NonNull
  public final TextView tvStreamDot;

  @NonNull
  public final TextView tvStreamHandpickedTitle;

  @NonNull
  public final TextView tvStreamLanguage;

  private ItemLayoutStreamHandpickedBinding(@NonNull ConstraintLayout rootView,
      @NonNull CardView cardStreamItem, @NonNull ConstraintLayout constraintStreamHandpicked,
      @NonNull ImageView imageHomeStreamItem, @NonNull TextView tvStreamCategory,
      @NonNull TextView tvStreamDot, @NonNull TextView tvStreamHandpickedTitle,
      @NonNull TextView tvStreamLanguage) {
    this.rootView = rootView;
    this.cardStreamItem = cardStreamItem;
    this.constraintStreamHandpicked = constraintStreamHandpicked;
    this.imageHomeStreamItem = imageHomeStreamItem;
    this.tvStreamCategory = tvStreamCategory;
    this.tvStreamDot = tvStreamDot;
    this.tvStreamHandpickedTitle = tvStreamHandpickedTitle;
    this.tvStreamLanguage = tvStreamLanguage;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemLayoutStreamHandpickedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemLayoutStreamHandpickedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_layout_stream_handpicked, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemLayoutStreamHandpickedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardStreamItem;
      CardView cardStreamItem = rootView.findViewById(id);
      if (cardStreamItem == null) {
        break missingId;
      }

      ConstraintLayout constraintStreamHandpicked = (ConstraintLayout) rootView;

      id = R.id.imageHomeStreamItem;
      ImageView imageHomeStreamItem = rootView.findViewById(id);
      if (imageHomeStreamItem == null) {
        break missingId;
      }

      id = R.id.tvStreamCategory;
      TextView tvStreamCategory = rootView.findViewById(id);
      if (tvStreamCategory == null) {
        break missingId;
      }

      id = R.id.tvStreamDot;
      TextView tvStreamDot = rootView.findViewById(id);
      if (tvStreamDot == null) {
        break missingId;
      }

      id = R.id.tvStreamHandpickedTitle;
      TextView tvStreamHandpickedTitle = rootView.findViewById(id);
      if (tvStreamHandpickedTitle == null) {
        break missingId;
      }

      id = R.id.tvStreamLanguage;
      TextView tvStreamLanguage = rootView.findViewById(id);
      if (tvStreamLanguage == null) {
        break missingId;
      }

      return new ItemLayoutStreamHandpickedBinding((ConstraintLayout) rootView, cardStreamItem,
          constraintStreamHandpicked, imageHomeStreamItem, tvStreamCategory, tvStreamDot,
          tvStreamHandpickedTitle, tvStreamLanguage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
