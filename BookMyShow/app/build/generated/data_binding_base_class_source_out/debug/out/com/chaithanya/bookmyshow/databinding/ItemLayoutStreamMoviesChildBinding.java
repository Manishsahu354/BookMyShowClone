// Generated by view binder compiler. Do not edit!
package com.chaithanya.bookmyshow.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.chaithanya.bookmyshow.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemLayoutStreamMoviesChildBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardViewStream;

  @NonNull
  public final ImageView imageMoviesItem;

  @NonNull
  public final ConstraintLayout streamMoviesChildConstraint;

  @NonNull
  public final TextView tvMovieAgeRestriction;

  @NonNull
  public final TextView tvMovieCategory;

  @NonNull
  public final TextView tvMovieDot;

  @NonNull
  public final TextView tvMovieLanguage;

  private ItemLayoutStreamMoviesChildBinding(@NonNull ConstraintLayout rootView,
      @NonNull CardView cardViewStream, @NonNull ImageView imageMoviesItem,
      @NonNull ConstraintLayout streamMoviesChildConstraint,
      @NonNull TextView tvMovieAgeRestriction, @NonNull TextView tvMovieCategory,
      @NonNull TextView tvMovieDot, @NonNull TextView tvMovieLanguage) {
    this.rootView = rootView;
    this.cardViewStream = cardViewStream;
    this.imageMoviesItem = imageMoviesItem;
    this.streamMoviesChildConstraint = streamMoviesChildConstraint;
    this.tvMovieAgeRestriction = tvMovieAgeRestriction;
    this.tvMovieCategory = tvMovieCategory;
    this.tvMovieDot = tvMovieDot;
    this.tvMovieLanguage = tvMovieLanguage;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemLayoutStreamMoviesChildBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemLayoutStreamMoviesChildBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_layout_stream_movies_child, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemLayoutStreamMoviesChildBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardViewStream;
      CardView cardViewStream = rootView.findViewById(id);
      if (cardViewStream == null) {
        break missingId;
      }

      id = R.id.imageMoviesItem;
      ImageView imageMoviesItem = rootView.findViewById(id);
      if (imageMoviesItem == null) {
        break missingId;
      }

      ConstraintLayout streamMoviesChildConstraint = (ConstraintLayout) rootView;

      id = R.id.tvMovieAgeRestriction;
      TextView tvMovieAgeRestriction = rootView.findViewById(id);
      if (tvMovieAgeRestriction == null) {
        break missingId;
      }

      id = R.id.tvMovieCategory;
      TextView tvMovieCategory = rootView.findViewById(id);
      if (tvMovieCategory == null) {
        break missingId;
      }

      id = R.id.tvMovieDot;
      TextView tvMovieDot = rootView.findViewById(id);
      if (tvMovieDot == null) {
        break missingId;
      }

      id = R.id.tvMovieLanguage;
      TextView tvMovieLanguage = rootView.findViewById(id);
      if (tvMovieLanguage == null) {
        break missingId;
      }

      return new ItemLayoutStreamMoviesChildBinding((ConstraintLayout) rootView, cardViewStream,
          imageMoviesItem, streamMoviesChildConstraint, tvMovieAgeRestriction, tvMovieCategory,
          tvMovieDot, tvMovieLanguage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
